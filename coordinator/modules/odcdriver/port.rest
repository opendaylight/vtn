# Copyright (c) 2015-2016 NEC Corporation
# All rights reserved.
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License v1.0 which accompanies this
# distribution, and is available at http://www.eclipse.org/legal/epl-v10.html

# Response format of vtn-port
#{
#  "vtn-node": [
#  {
#    "id": "openflow:3",
#      "openflow-version": "OF10",
#      "vtn-port": [
#      {
#        "cost": 1000,
#        "enabled": true,
#        "id": "openflow:3:2",
#        "name": "s3-eth2"
#      },
#      {
#        "cost": 1000,
#        "enabled": true,
#        "id": "openflow:3:1",
#        "name": "s3-eth1"
#      },
#      {
#        "cost": 1000,
#        "enabled": true,
#        "id": "openflow:3:3",
#        "name": "s3-eth3",
#        "port-link": [
#        {
#          "link-id": "openflow:1:2",
#          "peer": "openflow:1:2"
#        },
#        {
#          "link-id": "openflow:3:3",
#          "peer": "openflow:1:2"
#        }
#        ]
#      }
#    ]
#  }
#  ]
#}
# Please go through topo.rest file for explanations.

# Structure member section
[name]
type=string
key="name"
struct_name=vtn_port
category=mandatory
mandatory = yes
build_support=no
parse_support=yes

# Structure member section
[enabled]
type=int
key="enabled"
struct_name=vtn_port
mandatory = yes
build_support=no
parse_support=yes

# Structure member section
[cost]
type=string
key="cost"
struct_name=vtn_port
mandatory = yes
build_support=no
parse_support=yes

# Structure member section
[id]
type=string
key="id"
struct_name=vtn_port
mandatory = yes
build_support=no
parse_support=yes

# Structure of vtn_port parser class section
[vtn_port]
type=array
key="vtn-port"
is_child=yes
struct_name=vtn_port
check_bool_set=yes
members=cost,id,name,enabled
build_support=no
mandatory = yes
get_support=yes
get_abstract=yes

# Parser class object section
[vtnnode]
type=object
key="vtn-node"
struct_name=vtn_port
members=vtn_port
check_bool_set=yes
is_child=yes
build_support=no
get_support=yes
get_abstract=yes

# URL section
[RESTURL]
type=url_string
value="/restconf"

# URL section
[SLASH]
type=url_string
value="/"

# URL section
[VTNINVENTORYURL]
type=url_string
value="vtn-inventory"

# URL section
[COLON]
type=url_string
value=":"

# URL section
[OPERATIONURL]
type=url_string
value="operational"

# URL section
[VTNNODSURL]
type=url_string
value="vtn-nodes"

# URL section
[VTNNODURL]
type=url_string
value="vtn-node"

# URL interface members section
[controller_ip]
type=string
get_abstract=yes

# URL interface members section
[controller_port]
type=string
get_abstract=yes

# URL section
[switch_id]
type=url_string
get_abstract=yes

# GET URL of section vtnport_parser
[VTN_GETSUPPORT_URL]
type=url_string
url_format=RESTURL,SLASH,OPERATIONURL,SLASH,VTNINVENTORYURL,COLON,VTNNODSURL,SLASH,VTNINVENTORYURL,COLON,VTNNODURL,SLASH,switch_id
interface_members=controller_ip,controller_port

# Parser class section
[vtnport_parser]
type=READ
url=VTN_GETSUPPORT_URL
request_type=object
parse_request_members=vtnnode
build_request_members=vtnnode
response_members="vtn-node"

# Request class section
[vtnport_request]
type=READ
url=VTN_GETSUPPORT_URL
request_type=object
interface=switch_id
request_members=vtnnode
response_members="vtn-node"

# GET URL section
[READ]
url=VTN_GETSUPPORT_URL

# Main function
[ROOT]
url_class = vtnport_request
parse_class=vtnport_parser
namespace=odcdriver
struct_type = vtn-port
data=vtn_port
methods=vtnport_request
